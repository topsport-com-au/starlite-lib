[gh-actions]
python =
    3.10: py310,no-extras
    3.11: py311,no-extras,pytest-plugin,integration

[tox]
envlist = pylint,mypy,pyright,py310,py311,no-extras,pytest-plugin,integration,coverage
isolated_build = true

[testenv]
deps = -r{toxinidir}/requirements.dev.txt

commands = coverage run -p -m pytest {posargs}

[testenv:py3{10,11}]
deps = -r {toxinidir}/requirements.dev-extras.txt

[testenv:pytest-plugin]
basepython = python3.11
deps = -r requirements.dev-extras.txt
commands = coverage run -p -m pytest tests/pytest_plugin {posargs}

[testenv:coverage]
depends = py310,py311,no-extras,pytest-plugin
basepython = python3.11
commands =
    coverage combine
    coverage report -m --skip-covered
    coverage xml
parallel_show_output = true

[testenv:pylint]
basepython = python3.11
deps =
    pylint
    -r requirements.dev-extras.txt
commands = python -m pylint src/ tests/

[testenv:mypy]
basepython = python3.11
deps =
    asyncpg-stubs
    mypy
    types-redis
    -r requirements.dev-extras.txt
commands = python -m mypy examples/ src/ tests/

[testenv:pyright]
basepython = python3.11
deps =
    asyncpg-stubs
    pyright
    types-redis
    -r requirements.dev-extras.txt
commands = pyright examples/ src/ tests/

[testenv:integration]
basepython = python3.11
deps =
    docker-compose
    -r requirements.dev-extras.txt
allowlist_externals = docker
commands = pytest tests/integration {posargs}

[testenv:no-extras]
basepython = python3.11
commands = coverage run -p -m pytest {posargs}

[testenv:docs]
basepython = python3.11
passenv = HOME
deps = -r{toxinidir}/requirements.docs.txt
commands = mike {posargs: serve}
