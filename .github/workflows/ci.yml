name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  FORCE_COLOR: "1"
  TOX_TESTENV_PASSENV: "FORCE_COLOR"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PYTHON_LATEST: "3.11"

permissions:
  contents: read

jobs:
  pylint:
    name: pylint
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@2e205a28d0e1da00c5f53b161f4067b052c61f34 # @v1.5.0
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org:443
            github.com:443
            objects.githubusercontent.com:443
            pypi.org:443
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # @v3.1.0
      - uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984 #v4.3.0
        with:
          python-version: ${{env.PYTHON_LATEST}}
      - name: Install Dependencies
        run: python -m pip install --upgrade wheel tox
      - run: python -m tox -e pylint
  mypy:
    name: mypy
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@2e205a28d0e1da00c5f53b161f4067b052c61f34 # @v1.5.0
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org:443
            github.com:443
            objects.githubusercontent.com:443
            pypi.org:443
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # @v3.1.0
      - uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984 #v4.3.0
        with:
          python-version: ${{env.PYTHON_LATEST}}
      - name: Install Dependencies
        run: python -m pip install --upgrade wheel tox
      - run: python -m tox -e mypy
  pyright:
    name: pyright
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@2e205a28d0e1da00c5f53b161f4067b052c61f34 # @v1.5.0
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org:443
            github.com:443
            objects.githubusercontent.com:443
            pypi.org:443
            registry.npmjs.org:443
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # @v3.1.0
      - uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984 #v4.3.0
        with:
          python-version: ${{env.PYTHON_LATEST}}
      - name: Install Dependencies
        run: python -m pip install --upgrade wheel tox
      - run: python -m tox -e pyright
  tests:
    name: tests on ${{matrix.python-version}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.10"
          - "3.11"
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@2e205a28d0e1da00c5f53b161f4067b052c61f34 # @v1.5.0
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org:443
            github.com:443
            objects.githubusercontent.com:443
            production.cloudflare.docker.com:443
            pypi.org:443
            registry-1.docker.io:443
            auth.docker.io:443
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # @v3.1.0
      - uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984 #v4.3.0
        with:
          python-version: ${{matrix.python-version}}
      - name: Install Dependencies
        run: python -m pip install --upgrade wheel tox tox-gh-actions
      - run: python -m tox
      - name: Upload Coverage Data
        uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # @v3.1.1
        with:
          name: covdata
          path: .coverage.*
  coverage:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@2e205a28d0e1da00c5f53b161f4067b052c61f34 # @v1.5.0
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org:443
            github.com:443
            objects.githubusercontent.com:443
            pypi.org:443
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # @v3.1.0
      - uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984 #v4.3.0
        with:
          python-version: ${{env.PYTHON_LATEST}}
      - run: python -m pip install --upgrade wheel tox
      - name: Download coverage data
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # @v3.0.1
        with:
          name: covdata
      - name: Fail if it's <100%.
        run: |
          python -m tox -e coverage
      - name: Upload HTML report if check failed.
        uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # @v3.1.1
        with:
          name: html-report
          path: htmlcov
        if: ${{failure()}}
  check:
    if: always()
    needs:
      - pylint
      - pyright
      - mypy
      - tests
      - coverage
    runs-on: Ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@2e205a28d0e1da00c5f53b161f4067b052c61f34 # @v1.5.0
        with:
          egress-policy: block
          allowed-endpoints: >

      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # @v1.2.2
        with:
          jobs: ${{toJSON(needs)}}
  release:
    runs-on: ubuntu-latest
    concurrency: release
    if: github.ref == 'refs/heads/main'
    needs: check
    env:
      GH_TOKEN: ${{ secrets.SEMANTIC_RELEASES_TOKEN }}
      REPOSITORY_USERNAME: __token__
      REPOSITORY_PASSWORD: ${{ secrets.PYPI_TOKEN }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@2e205a28d0e1da00c5f53b161f4067b052c61f34 # @v1.5.0
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org:443
            github.com:443
            objects.githubusercontent.com:443
            pypi.org:443
            upload.pypi.org:443
            uploads.github.com:443
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # @v3.1.0
        with:
          fetch-depth: 0
          token: ${{ secrets.SEMANTIC_RELEASES_TOKEN }}
      - uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984 #v4.3.0
        with:
          python-version: ${{env.PYTHON_LATEST}}
      - run: python -m pip install python-semantic-release
      - name: Python Semantic Release
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          semantic-release publish -v DEBUG -D commit_author="github-actions <action@github.com>"
