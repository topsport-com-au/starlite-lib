name: ci

on:
  push:
    branches: [main]
  pull_request:

env:
  FORCE_COLOR: "1"
  TOX_TESTENV_PASSENV: "FORCE_COLOR"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PYTHON_LATEST: "3.11"

permissions:
  contents: read

jobs:
  pylint:
    name: pylint
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57 # @v2.2.0
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org:443
            github.com:443
            objects.githubusercontent.com:443
            pypi.org:443
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # @v3.3.0
      - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 #v4.5.0
        with:
          python-version: ${{env.PYTHON_LATEST}}
      - name: Install Dependencies
        run: python -m pip install --upgrade -r requirements.ci.txt
      - run: python -m tox -e pylint
  mypy:
    name: mypy
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57 # @v2.2.0
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org:443
            github.com:443
            objects.githubusercontent.com:443
            pypi.org:443
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # @v3.3.0
      - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 #v4.5.0
        with:
          python-version: ${{env.PYTHON_LATEST}}
      - name: Install Dependencies
        run: python -m pip install --upgrade -r requirements.ci.txt
      - run: python -m tox -e mypy
  pyright:
    name: pyright
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57 # @v2.2.0
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org:443
            github.com:443
            objects.githubusercontent.com:443
            pypi.org:443
            registry.npmjs.org:443
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # @v3.3.0
      - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 #v4.5.0
        with:
          python-version: ${{env.PYTHON_LATEST}}
      - name: Install Dependencies
        run: python -m pip install --upgrade -r requirements.ci.txt
      - run: python -m tox -e pyright
  tests:
    name: tests on ${{matrix.python-version}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.10"
          - "3.11"
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57 # @v2.2.0
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org:443
            github.com:443
            objects.githubusercontent.com:443
            production.cloudflare.docker.com:443
            pypi.org:443
            registry-1.docker.io:443
            auth.docker.io:443
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # @v3.3.0
      - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 #v4.5.0
        with:
          python-version: ${{matrix.python-version}}
      - name: Install Dependencies
        run: python -m pip install --upgrade -r requirements.ci.txt tox-gh-actions
      - run: python -m tox
      - name: Upload Coverage Data
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # @v3.1.2
        with:
          name: covdata
          path: .coverage.*
  coverage:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57 # @v2.2.0
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org:443
            github.com:443
            objects.githubusercontent.com:443
            pypi.org:443
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # @v3.3.0
      - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 #v4.5.0
        with:
          python-version: ${{env.PYTHON_LATEST}}
      - run: python -m pip install --upgrade -r requirements.ci.txt
      - name: Download coverage data
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # @v3.0.2
        with:
          name: covdata
      - name: Report coverage
        run: |
          python -m tox -e coverage
      - name: Upload XML report for sonar.
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # @v3.1.2
        with:
          name: xml-report
          path: coverage.xml
  codeql:
    name: CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57 # @v2.2.0
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            bootstrap.pypa.io:443
            files.pythonhosted.org:443
            github.com:443
            objects.githubusercontent.com:443
            pypi.org:443
            uploads.github.com:443
      - name: Checkout repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # @v3.3.0
      - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 #v4.5.0
        with:
          python-version: ${{env.PYTHON_LATEST}}
      - name: Initialize CodeQL With Dependencies
        if: github.event_name == 'push' && github.ref_name == 'main'
        uses: github/codeql-action/init@v2
        with:
          languages: python
      - name: Initialize CodeQL Without Dependencies
        if: github.ref_name != 'main'
        uses: github/codeql-action/init@v2
        with:
          languages: python
          setup-python-dependencies: false
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: coverage
    if: github.event.pull_request.head.repo.fork == false
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57 # @v2.2.0
        with:
          egress-policy: audit
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # @v3.3.0
        with:
          fetch-depth: 0
      - name: Download coverage report
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # @v3.0.2
        with:
          name: xml-report
      - name: Fix coverage file for sonarcloud
        # https://community.sonarsource.com/t/sonar-on-github-actions-with-python-coverage-source-issue/36057
        run: sed -i "s/home\/runner\/work\/starlite-saqlalchemy\/starlite-saqlalchemy/github\/workspace/g" coverage.xml
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@cb201f3b2d7a38231a8c042dfea4539c8bea180b # @v1.8
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
  check:
    if: always()
    needs:
      - codeql
      - coverage
      - mypy
      - pylint
      - pyright
      - tests
    runs-on: Ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57 # @v2.2.0
        with:
          egress-policy: block
          allowed-endpoints: >

      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # @v1.2.2
        with:
          jobs: ${{toJSON(needs)}}
  release:
    runs-on: ubuntu-latest
    concurrency: release
    if: github.ref == 'refs/heads/main'
    needs: check
    env:
      GH_TOKEN: ${{ secrets.SEMANTIC_RELEASES_TOKEN }}
      REPOSITORY_USERNAME: __token__
      REPOSITORY_PASSWORD: ${{ secrets.PYPI_TOKEN }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57 # @v2.2.0
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org:443
            github.com:443
            objects.githubusercontent.com:443
            pypi.org:443
            upload.pypi.org:443
            uploads.github.com:443
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # @v3.3.0
        with:
          fetch-depth: 0
          token: ${{ secrets.SEMANTIC_RELEASES_TOKEN }}
      - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 #v4.5.0
        with:
          python-version: ${{env.PYTHON_LATEST}}
      - run: python -m pip install python-semantic-release
      - name: Python Semantic Release
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          semantic-release publish -v DEBUG -D commit_author="github-actions <action@github.com>"
